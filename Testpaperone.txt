Core Java Questions:

1. What is encapsulation? WAP to access the private members of the class?


package collectionpractice;
//The intention behind encapsulation is to hide the implementation details from users.
//If a data member is private it means it can only be accessed within the same class. 
//No outside class can access private data member (variable) of other class.
//so we need to impliment set and get method to access private variable.

public class TestEncapsulation1 {
	
	private String name;
	private int phonenum;
	private String SSNnum;
	public void setname(String newval) {
		name=newval;
	}
	public void setphonenum(int newval) {
		phonenum=newval;
	}
	public void setSSNnum(String newval) {
		SSNnum=newval;
	}
	public String getname(){
        return name;
    }
	public int getphonenum(){
        return phonenum ;
    }
	public String getSSNnum(){
        return SSNnum;
    }
	
	public static void main(String[] args) {
		TestEncapsulation1 callfunc=new TestEncapsulation1();
		callfunc.setname("Aadya");
		callfunc.setphonenum(445678934);
		callfunc.setSSNnum("sx3456");
		System.out.println("student name :"+callfunc.getname());
		System.out.println("student phonenum :"+callfunc.getphonenum());
		System.out.println("student SSNnum :"+callfunc.getSSNnum());


	}

}


2. What is abstraction? WAP for the abstraction?
package collectionpractice;

public class test2 {
	
	//Abstraction is the concept of object-oriented programming that 
	//"shows" only essential attributes and "hides" unnecessary information. 

	public static void main(String[] args) {
		projectmanager obj=new tester();
		obj.planing();
		obj.designing();
		obj.devoloping();
		obj.testing();
		}
}
abstract class projectmanager{
public static void planing()
{
	System.out.println("planing is done successfully done");
}
public abstract  void designing();
public abstract  void devoloping();
public abstract  void testing();

}

abstract class arcitect extends projectmanager{
	public void  designing()
	{
		System.out.println("designing is done");
	}
	
	}
abstract class devoloper extends arcitect {
	public  void  devoloping()
	{
		System.out.println("devoloping is done");
	}
}	
class tester extends devoloper{
	public  void  testing()
	{
		System.out.println("testing is done");
	}

}


3. What are the difference between abstract class and interface?

***************Abstract class***************
1:Hiding the implementation logics called abs.
2:Abstract class can have Abs method and also have non abs methods.
3:we need to write abstract key word:
3.we can also call this method by using Dynamicpholimorphisom
****************interface*************
1: in interface we always define only abs methods we achive 100%abstraction
2:it doesnt contains the body.
3:we dont to need write abstract key word, insted we use implyments Key word.

4. WAP to check that the given number is prime or not?




5. WAP to read the .txt file using FileInputStream class. Make sure it only displays vowels (a, e, i, o, u) from the file if exists?
package collectionpractice;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

 

public class Test5 {

	public static void main(String[] args) throws IOException {
		
		readFile("C:\\Users\\manju\\eclipse-workspace\\MyJavaprojectNew\\src\\collectionpractice\\test.txt");

	}
	
	public static String readFile(String filename) throws IOException
	{
	    String content = null;
	    File file = new File(filename);
	    FileReader reader = null;
	    try {
	        reader = new FileReader(file);
	        
	        char[] chars = new char[(int) file.length()];
	        
	        reader.read(chars);
	        content = new String(chars);
	        
	        for (char c : chars) {
	        	 if (c=='a' ||c=='e'||c=='i'||c=='o'||c=='u')
		       		 System.out.println("char is ovel: "+c);
				}
	        
	       //System.out.println(content);
	        
	        reader.close();
	    } catch (IOException e) {      
	        e.printStackTrace();    //it gives more informaion than sysprintln,example: where the file is failed,which line ex
	    } finally {
	        if(reader != null){
	            reader.close();
	        }
	    }
	    return content;
	}

}








11. What is the outout of the below code? Explain with reasons. Fix the code and execute all the methods available in all the classes using single object?

abstarct class Parent{
   abstract void method1();
   abstract void method2();
   public void a() {System.out.println("Parent: method a()");}
}

class Child extends Parent{
   abstract void method3();
   public void b() {System.out.println("Child: method b()");}
}

class GrandChild extends Child{
    void method3() {System.out.println("GrandChild implemented method3() abstract method")}
}

public class InheritanceDemo{
   public static void main(String[] args)
   {
       Parent obj=new GrandChild();  //Dynamicpholimorphisom
	   Grandchild obj=new GrandChild();  //2nd type
    }
}

12. WAP to demonstrate the compile time polymorphism in java?

//method over riding is also caled as compile time Polymorphisum
public class Testi {

	public static void main(String[] args) {
		
		Fatherphone obj=new sonphone();
		
		obj.mobile();
		}
	
}

 class Fatherphone{
  public void mobile()
   {
	   System.out.println("father mobile is my phone its samsung s3");
   }
}
 class sonphone extends Fatherphone{
	public void mobile()
	{
		System.out.println("I bought new phone its iphone");  
	}
}


14.What is the difference between throw and throws with example code? 


15. Explain the finally block?
The finally block in java is used to put important codes such as clean up code 
e.g. closing the file or closing the connection. The finally block executes whether 
exception rise or not and whether exception handled or not.
A finally contains all the crucial statements regardless of the exception occurs or not.
 

16. What is the output of the below code?
public static void main(String[] args)
{
	String str = null;
    try{
	   str = "Good morning";
	   System.out.print(str);
	   System.out.print();
	   System.out.print("**********");
	   str = "Good Day";
	   System.out.print(str);
	   throw IllegalArgumentException("Custom exception message");
	}catch(Exception e)
	{
	   System.out.println("Encoutered exception");
	}
	finally{
	   System.out.println("Executing finally block");
	   str = null;
	}
}
It throws the compile time exception because print doesn't have any parameter.






 

1. copy the questions (with out delete/modify) into notepad
2. Save the notepad with <Poornima Harsha>.txt
3. If you have not attended SQL/Java then please mention that 'Not Attended'
4. If need help in understanding the question then please let me know
5. The test must be completed by 04:00 PM. Any answers after 04:00 PM will be treated as absent



